[{"title":"Markdown中的变量引用","date":"2018-04-05T10:34:06.000Z","path":"2018/04/05/Markdown中的变量引用/","text":"写东西的时候突发奇想，Markdown支持变量引用吗？这么高大上的工具应该支持的吧？！于是就查阅了一些资料:果然支持！ 下面把变量引用的用法记录一下。使用变量的好处，应该是很明显的：一处定义，处处使用，而且方便统一修改。 示例中二维码是我刚开通个人公众号，有兴趣的关注一波啊，应该是很安静的～ O(∩_∩)O 变量定义格式，支持中文 :-)1234[baidu]:http://www.baidu.com[我的主页]:http://www.jianchengss.com[image-qr-code]: https://gitee.com/jianchengss/resources/raw/master/images/weixin/mp_QR-code/Jason_pinyaxuan_8.jpg[image-error]: https://www.baidu.com/Jason_pinyaxuan_8.jpg 定义的变量可以在文档的任何位置，而且在正文中不显示，比如说本文底部定义了上面代码块里的变量，供下面示例使用，不过页面上是看不到的。 注意！链接写的时候一定要带 http://,不然链接不生效，不要问我是怎么知道的！！ 变量使用123456789### 示例1直接把key放入[],这样显示文本是key，链接为value（但是两个放在一行会出问题，而且要空一行才能正确显示两个。。。。）:[baidu] [我的主页] ← 这里有两，只会显示第一个，估计识别成两个中括号的模式了（因为鼠标放上去显示链接是第二个变量值，两个中括号中间空格无效）[baidu][我的主页] 示例1直接把key放入[],这样显示文本是key，链接为value（但是两个放在一行会出问题，而且要空一行才能正确显示两个。。。。）: baidu ← 这里有两，只会显示第一个，估计识别成两个中括号的模式了（因为鼠标放上去显示链接是第二个变量值，两个中括号中间空格无效） baidu 我的主页 1234### 示例2自定义链接显示文本 + key，分别在[]里：[百度][baidu] [我的主页][我的主页] 示例2自定义链接显示文本 + key，分别在[]里： 百度 我的主页 1234567### 示例3图片中引用变量：直接使用，前面加感叹号，这样图片失效的时候显示的是key，图片显示是value指向的图片：![image-qr-code]![image-error] 示例3图片中引用变量： 直接使用，前面加感叹号，这样图片失效的时候显示的是key，图片显示是value指向的图片： 123456### 示例4感叹号+[图片失效是显示文本] + [key], 自定义图片失效是显文本:![图片失效是显示文本][image-qr-code]![图片加载失败][image-error] 示例4感叹号+[图片失效时显示文本] + [key], 自定义图片失效是显文本: 关键字：Markdown, 变量引用 原载地址：http://www.jianchengss.com/2018/04/05/Markdown中的变量引用/ 转载请注明出处！","tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/tags/Markdown/"}]},{"title":"机器学习资源汇总","date":"2018-02-11T12:04:16.000Z","path":"2018/02/11/机器学习资源汇总/","text":"平时看到的机器学习相关资源汇总到这里，好记性不如烂笔头！ 论文 学界 | 2010-2016年被引用次数最多的深度学习论文（附论文下载） 微软重磅论文提出LightRNN：高效利用内存和计算的循环神经网络 100 Must-Read NLProc Papers 深度学习论文阅读路线图 Deep Learning Papers Reading Roadmap 论文《Provable Algorithms for Machine Learning Problems》,机器学习若干问题的新颖，可证明，实用算法 “Provable Algorithms for Machine Learning Problems”, [Rong Ge, 2013] 涉及三大类：主题模型，稀疏、深度表示，隐变量模型、张量分解/矩阵分解，PS: NIPS’16最佳学生论文合作者(Provable Algorithms for Machine Learning Problems.pdf) 【论文】（论文+代码）加速的PixelCNN ++，图像生成效率提升了183倍(FAST GENERATION FOR CONVOLUTIONAL AUTORGRESSIVE MODELS) 机器学习和深度学习引用量最高的20篇论文（2014-2017） 面向推荐系统的深度学习文献列表 总结 机器学习入门资源不完全汇总 机器学习水平自测40题(附答案&amp;解析) Solutions for Skilltest Machine Learning : Revealed 网站 &amp;论坛 机器学习日报 机器学习：CSDN知识库 博客：计算机的潜意识 机器学习基本方法 机器学习所需的数学基础 【技术干货】Docker精华学习资料集锦 西瓜书 机器学习(周志华西瓜书) 参考答案 总目录 深度学习中文版 来自liip师兄的分享 神经网络演示 http://playground.tensorflow.org/ 知乎专栏：智能单元 聚焦通用人工智能 反向传播算法入门资源索引 Java方向技术面试答案(汇总版) Python Python 资源大全 用一个实际的数据集练手pandas Top 10 IPython Notebook 谷歌开源项目风格指南之 Python 风格指南 我理解的python最佳实践 Transfer Learning Applying transfer learning in NLP and CV https://towardsdatascience.com/applying-transfer-learning-in-nlp-and-cv-d4aaddd7ca90 java Java8-CheatSheet Java 8 Tutorials, Resources, Books and Examples to learn Lambdas, Stream API and Functional Interfaces 博 文 机器学习入门 ——奇迹不是因果的积累，而是宿命的选择 SVM 支持向量机通俗导论（理解SVM的三层境界） What is the class of this image 各种数据集上的数字识别汇总 知乎：深度学习有哪些好玩的且易于实现的论文？ 文本挖掘预处理的流程总结 这10本由浅入深的好书，或让你成为机器学习领域的专家 每天一个 Linux 命令：系列目录 独立开发者赚钱资料集锦 各种相似度介绍、 Python实现《统计学习方法》中的所有十个算法， 深度学习入门系列 机器学习新手必学十大算法指南 课程 吴立德 《深度学习课程》 卷积神经网络： 卷积核可视化 斯坦福大学的课程 :cs231n https://github.com/cs231n/cs231n.github.io http://cs231n.github.io/ CS 294：深度增强学习，2017年春季学期 &amp;&amp; 【Berkeley CS 294：深度增强学习，2017年春季学期】学习资源（附字幕） 已转存 李宏毅 台大李宏毅中文深度学习课程(2017) 本地资源DataSet THE MNIST DATABASE Face Recognition:The ORL dataset (Samaria F, Harter A (1994) Parameterisation of a stochastic model for human face identification, Proceedings of 2nd IEEE Workshop on Applications of Computer Vision.) Music Classification:The GTZAN dataset: Musical genre classification of audio signals Hand Movement Recognition -The sEMG dataset Improving EMG based classificationof basic hand movements using EMD UC Irvine Machine Learning Repository 双语平行语料：Tab-delimited Bilingual Sentence Pairs 关键字：机器学习, 资源列表 原载地址：http://www.jianchengss.com/2018/02/11/机器学习资源汇总/ 转载请注明出处！","tags":[{"name":"MachineLearning","slug":"MachineLearning","permalink":"http://yoursite.com/tags/MachineLearning/"}]},{"title":"Docker:使用jupyter notebook基础镜像搭建自己的PyTorch开发环境","date":"2018-02-11T11:52:31.000Z","path":"2018/02/11/Docker-使用jupyter-notebook基础镜像搭建自己的PyTorch开发环境/","text":"使用Docker搭建自己的PyTorch开发环境，方便迁移和远程使用。 启动最基本的jupyter notebook镜像：使用基础镜像jupyter/datascience-notebook,因为它预装了常用的模块：pandas, matplotlib, scipy, seaborn, scikit-learn, scikit-image, sympy, cython, patsy, statsmodel, cloudpickle, dill, numba, bokeh；1docker run -it --rm -p 8888:8888 jupyter/datascience-notebook:281505737f8a 其中docker run是使用一个镜像生成一个运行的容器； -it指交互模式，启动后终端在运行着的容器里面，与之对应的有-d后端运行模式，启动后终端交互在实体机，要想进入容器需要使用命令docker exec -it container-name bash docker exec -it container-name意为交互模式进入正在运行的一个容器，bash意为进入容器后使用的命令，这里用的是bash，这样进入容器后就能执行shell； --rm意为退出shell的时候自动删除容器，常在测试的时候使用，这样不用每次修改去删除已有的容器； -p 8888:8888指的是端口映射，前面的是实体机的端口，后面是容器里面暴露出的端口，两边端口可以不一样，这样同一个镜像可以启动多个对应不同端口的服务； jupyter/datascience-notebook:281505737f8a是镜像名字，冒号后面的是tag，类似于版本的概念，如果不显式的给出tag每次都回从hub上拉取latest的镜像，如果网络环境不好的话比较费时间，推荐显式给出tag，这样每次构建都会使用已有的镜像。 启动后就可以在终端看到：1234567891011[I 04:01:05.691 NotebookApp] Running the core application with no additional extensions or settings[I 04:01:05.692 NotebookApp] Serving notebooks from local directory: /home/jovyan[I 04:01:05.692 NotebookApp] 0 active kernels[I 04:01:05.692 NotebookApp] The Jupyter Notebook is running at:[I 04:01:05.692 NotebookApp] http://[all ip addresses on your system]:8888/?token=0a3331628e0e35f94eb0ad543faeb3e396fbccfa3ff06e5a[I 04:01:05.692 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).[C 04:01:05.692 NotebookApp] Copy/paste this URL into your browser when you connect for the first time, to login with a token: http://localhost:8888/?token=0a3331628e0e35f94eb0ad543faeb3e396fbccfa3ff06e5a 此时是停在容器里面，打开浏览器 访问http://localhost:8888/?token=0a3331628e0e35f94eb0ad543faeb3e396fbccfa3ff06e5a 即可打开基本的jupyter notebook 环境，后面的token是随机生成的； 启动带权限的容器生成自定义token123# Python脚本生成密码import IPythonIPython.lib.passwd() 输入密码生成token1test的token：sha1:6587feaef3b1:6b243404e4cfaafe611fdf494ee71fdaa8c4a563 自定义token运行容器：1docker run -d -p 8888:8888 jupyter/datascience-notebook start-notebook.sh --NotebookApp.password=&apos;sha1:6587feaef3b1:6b243404e4cfaafe611fdf494ee71fdaa8c4a563&apos; 这时访问http://localhost:8888/会出现输入密码的页面，输入正确的密码才能进入jupyter。 共享目录-v参数docker提供-v参数使实体机和容器共享目录，这对于有状态的服务很有用，目录挂载添加参数：-v /home/jason/jason/docker/notebook:/home/jovyan/work 运行带有目录共享的容器1docker run -it --rm -p 8888:8888 -v /home/jason/jason/docker/notebook:/home/jovyan/work jupyter/datascience-notebook start-notebook.sh --NotebookApp.password=&apos;sha1:6587feaef3b1:6b243404e4cfaafe611fdf494ee71fdaa8c4a563&apos; 这样在jupyter里新建的notebook都会出现在实体机指定的目录里。由于这个镜像的原因 需在work目录下新建才能在实体机看到。 基于jupyter/datascience-notebook 生成pytorch imageDockerfile因为没有合适的pytorch镜像，自己编辑Dockerfile: 新建文件Dockerfile并编辑内容： 12345678910FROM jupyter/datascience-notebook:281505737f8aMAINTAINER Jason.W. &quot;jianchengss@163.com&quot;# 下面是按官网的方法安装spotlight#RUN pip --no-cache-dir install --upgrade install http://download.pytorch.org/whl/cu75/torch-0.2.0.post3-cp36-cp36m-manylinux1_x86_64.whl #RUN pip --no-cache-dir install --upgrade torchvision# pytorchRUN conda install pytorch torchvision -c soumith# spotlight(https://github.com/maciejkula/spotlight)RUN conda install -c maciejkula -c soumith spotlight=0.1.2 build在Dockerfile目录里运行命令：docker build -t jianchengss/datascience-pytorch:0.1 .这样就生成了image：jianchengss/datascience-pytorch:0.1可以运行docker images查看本机上所有的image。 从构建的镜像运行容器1docker run -it --rm -p 8888:8888 -v ~/workspace/python/notebooks-pytorch:/home/jovyan/work --privileged=true jianchengss/datascience-pytorch:0.1 start-notebook.sh --NotebookApp.password=&apos;sha1:6587feaef3b1:6b243404e4cfaafe611fdf494ee71fdaa8c4a563&apos; 最终容器经过以上步骤，测试完成后既可以执行最终运行的命令 注意 token换成自己的1docker run -d -p 8588:8888 -v ~/workspace/python/notebooks-pytorch:/home/jovyan/work --privileged=true --name=pytorch jianchengss/datascience-pytorch:0.1 start-notebook.sh --NotebookApp.password=&apos;sha1:7aee2f913c8e:17d40f203cbd5c9820f302894a92724c3de9fba6&apos; -it --rm 换成了 -d,比之前多的参数有： --name=pytorch，意为给container取一个名字，好区分和管理，缺省的话名字为一串随机的字符串。 --privileged=true出现文件夹访问权限的时候添加该属性 此时运行docker ps即可查看运行着的容器：12CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES3bd3e30e9ab3 jianchengss/datascience-pytorch:0.1 &quot;tini -- start-notebo&quot; 4 seconds ago Up 3 seconds 0.0.0.0:8588-&gt;8888/tcp pytorch 进入容器操作容器启动后有时候需要进入容器操作，比方说查看信息或者安装新的软件，此时执行docker exec -it pytorch bash 其他命令123docker stop container-name # 停止运行着的容器docker rm container-name # 删除已有的容器，要先停止docker rmi image-name # 删除已有的镜像 关键字：docker jupyter notebook pytorch spotlight 原载地址：http://www.jianchengss.com/2018/02/11/Docker-使用jupyter-notebook基础镜像搭建自己的PyTorch开发环境/ 转载请注明出处！","tags":[{"name":"Docker","slug":"Docker","permalink":"http://yoursite.com/tags/Docker/"},{"name":"PyTorch","slug":"PyTorch","permalink":"http://yoursite.com/tags/PyTorch/"}]}]