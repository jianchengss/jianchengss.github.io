<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[机器学习资源汇总]]></title>
      <url>/2018/02/11/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/</url>
      <content type="html"><![CDATA[<h2 id="论文"><a href="#论文" class="headerlink" title="论文"></a>论文</h2><ul>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;mid=2650716071&amp;idx=1&amp;sn=7aa209732425c6a52536fbb9012a09fd&amp;scene=4#wechat_redirect" target="_blank" rel="noopener">学界 | 2010-2016年被引用次数最多的深度学习论文（附论文下载） </a></li>
<li><a href="http://www.jiqizhixin.com/article/1739" target="_blank" rel="noopener">微软重磅论文提出LightRNN：高效利用内存和计算的循环神经网络</a></li>
<li><a href="https://github.com/mhagiwara/100-nlp-papers" target="_blank" rel="noopener">100 Must-Read NLProc Papers</a></li>
<li><a href="https://github.com/songrotek/Deep-Learning-Papers-Reading-Roadmap" target="_blank" rel="noopener">深度学习论文阅读路线图 Deep Learning Papers Reading Roadmap</a></li>
<li><a href="https://users.cs.duke.edu/~rongge/thesis.pdf" target="_blank" rel="noopener">论文《Provable Algorithms for Machine Learning Problems》,机器学习若干问题的新颖，可证明，实用算法 “Provable Algorithms for Machine Learning Problems”, [Rong Ge, 2013] 涉及三大类：主题模型，稀疏、深度表示，隐变量模型、张量分解/矩阵分解，PS: NIPS’16最佳学生论文合作者</a>(Provable Algorithms for Machine Learning Problems.pdf)</li>
<li><a href="https://openreview.net/pdf?id=rkdF0ZNKl" target="_blank" rel="noopener">【论文】（论文+代码）加速的PixelCNN ++，图像生成效率提升了183倍</a>(FAST GENERATION FOR CONVOLUTIONAL AUTORGRESSIVE MODELS)</li>
<li><a href="https://mp.weixin.qq.com/s/2lU_PaTwStoDmXcD4KDe0g" target="_blank" rel="noopener">机器学习和深度学习引用量最高的20篇论文（2014-2017） </a></li>
<li><a href="https://github.com/robi56/Deep-Learning-for-Recommendation-Systems" target="_blank" rel="noopener">面向推荐系统的深度学习文献列表</a></li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li><a href="http://ml.memect.com/article/machine-learning-guide.html" target="_blank" rel="noopener">机器学习入门资源不完全汇总</a></li>
<li><a href="https://www.analyticsvidhya.com/blog/2016/11/solution-for-skilltest-machine-learning-revealed/" target="_blank" rel="noopener">机器学习水平自测40题(附答案&amp;解析) Solutions for Skilltest Machine Learning : Revealed</a></li>
</ul>
<h2 id="网站-amp-论坛"><a href="#网站-amp-论坛" class="headerlink" title="网站 &amp;论坛"></a>网站 &amp;论坛</h2><ul>
<li><a href="http://ml.memect.com/" target="_blank" rel="noopener">机器学习日报</a></li>
<li><a href="http://lib.csdn.net/base/machinelearning" target="_blank" rel="noopener">机器学习：CSDN知识库</a></li>
<li>博客：<a href="http://www.cnblogs.com/subconscious/" target="_blank" rel="noopener">计算机的潜意识</a><ul>
<li><a href="http://www.cnblogs.com/subconscious/p/4107357.html" target="_blank" rel="noopener">机器学习基本方法</a></li>
</ul>
</li>
<li><a href="http://blog.csdn.net/hopever/article/details/17451139" target="_blank" rel="noopener">机器学习所需的数学基础</a></li>
<li><a href="https://yq.aliyun.com/articles/65145?spm=5176.100238.goodcont.32.5rndmQ" target="_blank" rel="noopener">【技术干货】Docker精华学习资料集锦</a></li>
<li>西瓜书<ul>
<li><a href="http://blog.csdn.net/icefire_tyh/article/details/52064910" target="_blank" rel="noopener">机器学习(周志华西瓜书) 参考答案 总目录 </a></li>
</ul>
</li>
<li><a href="https://github.com/exacity/deeplearningbook-chinese" target="_blank" rel="noopener">深度学习中文版</a> 来自liip师兄的分享</li>
<li>神经网络演示  <a href="http://playground.tensorflow.org/" target="_blank" rel="noopener">http://playground.tensorflow.org/</a></li>
<li><a href="https://zhuanlan.zhihu.com/intelligentunit?utm_medium=social" target="_blank" rel="noopener">知乎专栏：智能单元 聚焦通用人工智能</a></li>
<li><a href="http://www.52nlp.cn/%e5%8f%8d%e5%90%91%e4%bc%a0%e6%92%ad%e7%ae%97%e6%b3%95%e5%85%a5%e9%97%a8%e8%b5%84%e6%ba%90%e7%b4%a2%e5%bc%95" target="_blank" rel="noopener">反向传播算法入门资源索引</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/26679704?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">Java方向技术面试答案(汇总版)</a></li>
</ul>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><ul>
<li><a href="http://mp.weixin.qq.com/s/Qat8CWRQyii3OpbsPdliQg" target="_blank" rel="noopener">Python 资源大全 </a></li>
<li><a href="https://juejin.im/entry/59a8c38c6fb9a0248926cc8e" target="_blank" rel="noopener">用一个实际的数据集练手pandas</a></li>
<li><a href="https://www.kdnuggets.com/2016/04/top-10-ipython-nb-tutorials.html" target="_blank" rel="noopener">Top 10 IPython Notebook </a></li>
<li><a href="http://www.techug.com/post/google-open-source-project-code-style-guide-python-code-guide.html" target="_blank" rel="noopener">谷歌开源项目风格指南之 Python 风格指南</a></li>
<li><a href="http://www.dongwm.com/archives/wo-li-jie-de-pythonzui-jia-shi-jian/?comefrom=http://blogread.cn/news/" target="_blank" rel="noopener">我理解的python最佳实践</a></li>
</ul>
<h2 id="Transfer-Learning"><a href="#Transfer-Learning" class="headerlink" title="Transfer Learning"></a>Transfer Learning</h2><ul>
<li><a href="https://towardsdatascience.com/transfer-learning-leveraging-insights-from-large-data-sets-d5435071ec5a" target="_blank" rel="noopener">Applying transfer learning in NLP and CV</a></li>
<li><a href="https://towardsdatascience.com/applying-transfer-learning-in-nlp-and-cv-d4aaddd7ca90" target="_blank" rel="noopener">https://towardsdatascience.com/applying-transfer-learning-in-nlp-and-cv-d4aaddd7ca90</a></li>
</ul>
<h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><ul>
<li><a href="https://github.com/BafS/Java8-CheatSheet" target="_blank" rel="noopener">Java8-CheatSheet</a></li>
<li><a href="http://javarevisited.blogspot.hk/2013/11/java-8-tutorials-resources-and-examples-lambda-expression-stream-api-functional-interfaces.html" target="_blank" rel="noopener">Java 8 Tutorials, Resources, Books and Examples to learn Lambdas, Stream API and Functional Interfaces</a></li>
</ul>
<h2 id="博-文"><a href="#博-文" class="headerlink" title="博 文"></a>博 文</h2><ul>
<li><a href="http://www.cnblogs.com/mldllearningforbai/p/5316728.html" target="_blank" rel="noopener">机器学习入门 ——奇迹不是因果的积累，而是宿命的选择</a></li>
<li>SVM <a href="http://blog.csdn.net/v_july_v/article/details/7624837" target="_blank" rel="noopener">支持向量机通俗导论（理解SVM的三层境界）</a></li>
<li><a href="http://rodrigob.github.io/are_we_there_yet/build/classification_datasets_results.html" target="_blank" rel="noopener">What is the class of this image 各种数据集上的数字识别汇总 </a></li>
<li><a href="https://www.zhihu.com/question/41231774" target="_blank" rel="noopener">知乎：深度学习有哪些好玩的且易于实现的论文？ </a></li>
<li><a href="http://blog.csdn.net/lanxu_yy/article/details/29002543" target="_blank" rel="noopener">文本挖掘预处理的流程总结 </a></li>
<li><a href="https://yq.aliyun.com/articles/66489?utm_campaign=wenzhang&amp;utm_medium=article&amp;utm_source=QQ-qun&amp;utm_content=m_12260" target="_blank" rel="noopener">这10本由浅入深的好书，或让你成为机器学习领域的专家</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzAxODI5ODMwOA==&amp;mid=519056788&amp;idx=1&amp;sn=93acb101e28f201c71babb80cd58b060&amp;chksm=00dce93f37ab6029097237d10f30c36096c164a0dc7ec7f3475bdeffb158e7fbc9e5bb79925e&amp;mpshare=1&amp;scene=1&amp;srcid=0410Coc0ONBVqx756OQz7Zpb#rd" target="_blank" rel="noopener">每天一个 Linux 命令：系列目录</a></li>
<li><a href="https://github.com/mezod/awesome-indie" target="_blank" rel="noopener">独立开发者赚钱资料集锦</a></li>
<li><a href="http://blog.csdn.net/ifnoelse/article/category/1186188" target="_blank" rel="noopener">各种相似度介绍</a>、</li>
<li><a href="http://blog.csdn.net/wds2006sdo?viewmode=contents" target="_blank" rel="noopener">Python实现《统计学习方法》中的所有十个算法，</a></li>
<li><a href="https://yq.aliyun.com/articles/169880?spm=5176.100239.blogcont86580.25.q3FlxS" target="_blank" rel="noopener">深度学习入门系列</a></li>
<li><a href="https://yq.aliyun.com/articles/406011?utm_content=m_41089" target="_blank" rel="noopener">机器学习新手必学十大算法指南</a></li>
</ul>
<h2 id="课程"><a href="#课程" class="headerlink" title="课程"></a>课程</h2><ul>
<li><p><a href="http://list.youku.com/albumlist/show?id=21508721&amp;ascending=1&amp;page=1" target="_blank" rel="noopener">吴立德 《深度学习课程》</a></p>
</li>
<li><p>卷积神经网络：</p>
<ul>
<li><a href="http://cs231n.github.io/assets/conv-demo/index.html" target="_blank" rel="noopener">卷积核可视化</a></li>
<li><a href="http://vision.stanford.edu/teaching/cs231n/" target="_blank" rel="noopener">斯坦福大学的课程 :cs231n </a></li>
<li><a href="https://github.com/cs231n/cs231n.github.io" target="_blank" rel="noopener">https://github.com/cs231n/cs231n.github.io</a></li>
<li><a href="http://cs231n.github.io/" target="_blank" rel="noopener">http://cs231n.github.io/</a><ul>
<li><a href="https://zhuanlan.zhihu.com/p/24721292" target="_blank" rel="noopener">CS 294：深度增强学习，2017年春季学期</a>  &amp;&amp; <a href="https://zhuanlan.zhihu.com/p/25298020" target="_blank" rel="noopener">【Berkeley CS 294：深度增强学习，2017年春季学期】学习资源（附字幕）</a> 已转存</li>
<li><a href="http://speech.ee.ntu.edu.tw/~tlkagk/courses_MLDS17.html" target="_blank" rel="noopener">李宏毅</a>   <a href="http://forum.ai100.com.cn/blog/thread/ml-2017-04-09/#4094720592026380" target="_blank" rel="noopener">台大李宏毅中文深度学习课程(2017)</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="本地资源"><a href="#本地资源" class="headerlink" title="本地资源"></a>本地资源</h2><h2 id="DataSet"><a href="#DataSet" class="headerlink" title="DataSet"></a>DataSet</h2><ul>
<li><a href="http://yann.lecun.com/exdb/mnist/" target="_blank" rel="noopener">THE MNIST DATABASE</a></li>
<li>Face Recognition:The ORL dataset (Samaria F, Harter A (1994) Parameterisation of a stochastic model for human face identification, Proceedings of 2nd IEEE Workshop on Applications of Computer Vision.)</li>
<li>Music Classification:The GTZAN dataset: <a href="http://dspace.library.uvic.ca:8080/bitstream/handle/1828/1344/tsap02gtzan.pdf?sequence=1" target="_blank" rel="noopener">Musical genre classification of audio signals</a></li>
<li>Hand Movement Recognition -The sEMG dataset <a href="https://www.researchgate.net/profile/Christos_Sapsanis/publication/257602303_Improving_EMG_based_classification_of_basic_hand_movements_using_EMD/links/56dfb7fd08ae979addef64a2.pdf" target="_blank" rel="noopener">Improving EMG based classification<br>of basic hand movements using EMD</a></li>
<li><a href="http://archive.ics.uci.edu/ml/" target="_blank" rel="noopener">UC Irvine Machine Learning Repository</a></li>
<li><a href="http://www.manythings.org/anki/?spm=5176.100239.blogcont221673.13.powgHo" target="_blank" rel="noopener">双语平行语料：Tab-delimited Bilingual Sentence Pairs </a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Docker:使用jupyter notebook基础镜像搭建自己的PyTorch开发环境]]></title>
      <url>/2018/02/11/Docker-%E4%BD%BF%E7%94%A8jupyter-notebook%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84PyTorch%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      <content type="html"><![CDATA[<!-- # Docker： 使用jupyter notebook基础镜像搭建自己的PyTorch开发环境 -->
<p>关键字：<code>docker</code> <code>jupyter notebook</code> <code>pytorch</code> <code>spotlight</code></p>
<p>原载地址：<a href="http://blog.csdn.net/jianchengss/article/details/78224778" target="_blank" rel="noopener">http://blog.csdn.net/jianchengss/article/details/78224778</a></p>
<h2 id="启动最基本的jupyter-notebook镜像："><a href="#启动最基本的jupyter-notebook镜像：" class="headerlink" title="启动最基本的jupyter notebook镜像："></a>启动最基本的jupyter notebook镜像：</h2><p>使用基础镜像<a href="https://hub.docker.com/r/jupyter/datascience-notebook/" target="_blank" rel="noopener">jupyter/datascience-notebook</a>,因为它预装了常用的模块：<code>pandas, matplotlib, scipy, seaborn, scikit-learn, scikit-image, sympy, cython, patsy, statsmodel, cloudpickle, dill, numba, bokeh</code>；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --rm -p 8888:8888 jupyter/datascience-notebook:281505737f8a</span><br></pre></td></tr></table></figure></p>
<p>其中<br><code>docker run</code>是使用一个镜像生成一个运行的容器；</p>
<p><code>-it</code>指交互模式，启动后终端在运行着的容器里面，与之对应的有<code>-d</code>后端运行模式，启动后终端交互在实体机，要想进入容器需要使用命令<code>docker exec -it container-name bash</code> <code>docker exec -it container-name</code>意为交互模式进入正在运行的一个容器，<code>bash</code>意为进入容器后使用的命令，这里用的是bash，这样进入容器后就能执行shell；</p>
<p><code>--rm</code>意为退出shell的时候自动删除容器，常在测试的时候使用，这样不用每次修改去删除已有的容器；</p>
<p><code>-p 8888:8888</code>指的是端口映射，前面的是实体机的端口，后面是容器里面暴露出的端口，两边端口可以不一样，这样同一个镜像可以启动多个对应不同端口的服务；</p>
<p><code>jupyter/datascience-notebook:281505737f8a</code>是镜像名字，冒号后面的是tag，类似于版本的概念，如果不显式的给出tag每次都回从hub上拉取latest的镜像，如果网络环境不好的话比较费时间，推荐显式给出tag，这样每次构建都会使用已有的镜像。</p>
<p>启动后就可以在终端看到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[I 04:01:05.691 NotebookApp] Running the core application with no additional extensions or settings</span><br><span class="line">[I 04:01:05.692 NotebookApp] Serving notebooks from local directory: /home/jovyan</span><br><span class="line">[I 04:01:05.692 NotebookApp] 0 active kernels</span><br><span class="line">[I 04:01:05.692 NotebookApp] The Jupyter Notebook is running at:</span><br><span class="line">[I 04:01:05.692 NotebookApp] http://[all ip addresses on your system]:8888/?token=0a3331628e0e35f94eb0ad543faeb3e396fbccfa3ff06e5a</span><br><span class="line">[I 04:01:05.692 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).</span><br><span class="line">[C 04:01:05.692 NotebookApp] </span><br><span class="line">    </span><br><span class="line">    Copy/paste this URL into your browser when you connect for the first time,</span><br><span class="line">    to login with a token:</span><br><span class="line">        http://localhost:8888/?token=0a3331628e0e35f94eb0ad543faeb3e396fbccfa3ff06e5a</span><br></pre></td></tr></table></figure></p>
<p>此时是停在容器里面，打开浏览器 访问<code>http://localhost:8888/?token=0a3331628e0e35f94eb0ad543faeb3e396fbccfa3ff06e5a</code> 即可打开基本的jupyter notebook 环境，后面的token是随机生成的；</p>
<h2 id="启动带权限的容器"><a href="#启动带权限的容器" class="headerlink" title="启动带权限的容器"></a>启动带权限的容器</h2><h3 id="生成自定义token"><a href="#生成自定义token" class="headerlink" title="生成自定义token"></a>生成自定义token</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Python脚本生成密码</span><br><span class="line">import IPython</span><br><span class="line">IPython.lib.passwd()</span><br></pre></td></tr></table></figure>
<p>输入密码生成token<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test的token：sha1:6587feaef3b1:6b243404e4cfaafe611fdf494ee71fdaa8c4a563</span><br></pre></td></tr></table></figure></p>
<h3 id="自定义token运行容器："><a href="#自定义token运行容器：" class="headerlink" title="自定义token运行容器："></a>自定义token运行容器：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8888:8888 jupyter/datascience-notebook start-notebook.sh --NotebookApp.password=&apos;sha1:6587feaef3b1:6b243404e4cfaafe611fdf494ee71fdaa8c4a563&apos;</span><br></pre></td></tr></table></figure>
<p>这时访问<code>http://localhost:8888/</code>会出现输入密码的页面，输入正确的密码才能进入jupyter。</p>
<h2 id="共享目录"><a href="#共享目录" class="headerlink" title="共享目录"></a>共享目录</h2><h3 id="v参数"><a href="#v参数" class="headerlink" title="-v参数"></a>-v参数</h3><p>docker提供<code>-v</code>参数使实体机和容器共享目录，这对于有状态的服务很有用，目录挂载添加参数：<br><code>-v /home/jason/jason/docker/notebook:/home/jovyan/work</code></p>
<h3 id="运行带有目录共享的容器"><a href="#运行带有目录共享的容器" class="headerlink" title="运行带有目录共享的容器"></a>运行带有目录共享的容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --rm -p 8888:8888 -v /home/jason/jason/docker/notebook:/home/jovyan/work   jupyter/datascience-notebook start-notebook.sh --NotebookApp.password=&apos;sha1:6587feaef3b1:6b243404e4cfaafe611fdf494ee71fdaa8c4a563&apos;</span><br></pre></td></tr></table></figure>
<p>这样在jupyter里新建的notebook都会出现在实体机指定的目录里。由于这个镜像的原因 需在work目录下新建才能在实体机看到。</p>
<h2 id="基于jupyter-datascience-notebook-生成pytorch-image"><a href="#基于jupyter-datascience-notebook-生成pytorch-image" class="headerlink" title="基于jupyter/datascience-notebook 生成pytorch image"></a>基于jupyter/datascience-notebook 生成pytorch image</h2><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>因为没有合适的pytorch镜像，自己编辑Dockerfile:</p>
<p>新建文件<code>Dockerfile</code>并编辑内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">FROM jupyter/datascience-notebook:281505737f8a</span><br><span class="line">MAINTAINER Jason.W. &quot;jianchengss@163.com&quot;</span><br><span class="line"># 下面是按官网的方法安装spotlight</span><br><span class="line">#RUN pip --no-cache-dir install --upgrade install http://download.pytorch.org/whl/cu75/torch-0.2.0.post3-cp36-cp36m-manylinux1_x86_64.whl </span><br><span class="line">#RUN pip --no-cache-dir install --upgrade torchvision</span><br><span class="line"></span><br><span class="line"># pytorch</span><br><span class="line">RUN conda install pytorch torchvision -c soumith</span><br><span class="line"># spotlight(https://github.com/maciejkula/spotlight)</span><br><span class="line">RUN conda install -c maciejkula -c soumith spotlight=0.1.2</span><br></pre></td></tr></table></figure>
<h3 id="build"><a href="#build" class="headerlink" title="build"></a>build</h3><p>在Dockerfile目录里运行命令：<code>docker build -t jianchengss/datascience-pytorch:0.1 .</code><br>这样就生成了image：<code>jianchengss/datascience-pytorch:0.1</code>可以运行<code>docker images</code>查看本机上所有的image。</p>
<h3 id="从构建的镜像运行容器"><a href="#从构建的镜像运行容器" class="headerlink" title="从构建的镜像运行容器"></a>从构建的镜像运行容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --rm -p 8888:8888 -v ~/workspace/python/notebooks-pytorch:/home/jovyan/work  --privileged=true jianchengss/datascience-pytorch:0.1 start-notebook.sh --NotebookApp.password=&apos;sha1:6587feaef3b1:6b243404e4cfaafe611fdf494ee71fdaa8c4a563&apos;</span><br></pre></td></tr></table></figure>
<h3 id="最终容器"><a href="#最终容器" class="headerlink" title="最终容器"></a>最终容器</h3><p>经过以上步骤，测试完成后既可以执行最终运行的命令 注意 token换成自己的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8588:8888 -v ~/workspace/python/notebooks-pytorch:/home/jovyan/work  --privileged=true --name=pytorch jianchengss/datascience-pytorch:0.1 start-notebook.sh --NotebookApp.password=&apos;sha1:7aee2f913c8e:17d40f203cbd5c9820f302894a92724c3de9fba6&apos;</span><br></pre></td></tr></table></figure></p>
<p><code>-it --rm</code> 换成了 <code>-d</code>,比之前多的参数有：</p>
<p><code>--name=pytorch</code>，意为给container取一个名字，好区分和管理，缺省的话名字为一串随机的字符串。</p>
<p><code>--privileged=true</code>出现文件夹访问权限的时候添加该属性</p>
<p>此时运行<code>docker ps</code>即可查看运行着的容器：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID        IMAGE                                 COMMAND                  CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">3bd3e30e9ab3        jianchengss/datascience-pytorch:0.1   &quot;tini -- start-notebo&quot;   4 seconds ago       Up 3 seconds        0.0.0.0:8588-&gt;8888/tcp   pytorch</span><br></pre></td></tr></table></figure></p>
<h3 id="进入容器操作"><a href="#进入容器操作" class="headerlink" title="进入容器操作"></a>进入容器操作</h3><p>容器启动后有时候需要进入容器操作，比方说查看信息或者安装新的软件，此时执行<code>docker exec -it pytorch bash</code></p>
<h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker stop container-name # 停止运行着的容器</span><br><span class="line">docker rm container-name # 删除已有的容器，要先停止</span><br><span class="line">docker rmi image-name # 删除已有的镜像</span><br></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> Docker </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
